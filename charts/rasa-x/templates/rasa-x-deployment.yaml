apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  name: {{ .Release.Name }}-rasa-x
  labels:
    {{- include "rasa-x.labels" . | nindent 4 }}
    app.kubernetes.io/component: rasa-x
spec:
  progressDeadlineSeconds: {{ .Values.global.progressDeadlineSeconds }}
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "rasa-x.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: rasa-x
  template:
    metadata:
      labels:
        {{- include "rasa-x.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: rasa-x
        {{- if .Values.rasax.podLabels }}
{{ toYaml .Values.rasax.podLabels | indent 8 }}
        {{- end }}
      annotations:
        checksum/rasa-config: {{ include (print $.Template.BasePath "/rasa-config-files-configmap.yaml") . | sha256sum }}
        checksum/rasa-x-config: {{ include (print $.Template.BasePath "/rasa-x-config-files-configmap.yaml") . | sha256sum }}
        checksum/rasa-secret: {{ include (print $.Template.BasePath "/rasa-secret.yaml") . | sha256sum }}
    spec:
      hostNetwork: {{ .Values.rasax.hostNetwork }}
      dnsPolicy: {{ include "rasa-x.dnsPolicy" . }}
      automountServiceAccountToken: {{ .Values.rasax.automountServiceAccountToken }}
      {{ include "rasa-x.spec" . }}
      {{- if .Values.rasax.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.rasax.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.rasax.tolerations }}
      tolerations:
{{ toYaml .Values.rasax.tolerations | indent 6 }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.rasax.name }}:{{ include "rasa-x.version" . }}"
        imagePullPolicy: {{ .Values.images.pullPolicy }}
        {{- if .Values.rasax.command }}
        command:
          {{- toYaml .Values.rasax.command | nindent 10 }}
        {{- end }}
        {{- if .Values.rasax.args }}
        args:
          {{- toYaml .Values.rasax.args | nindent 10 }}
        {{- end }}
        ports:
          - name: "http"
            containerPort: {{ default 5002 .Values.rasax.port }}
            protocol: "TCP"
        {{- if or .Values.rasax.livenessProbe.enabled (not (hasKey .Values.rasax.livenessProbe "enabled")) }}
        livenessProbe:
          httpGet:
            path: "/"
            port: "http"
            scheme: {{ default "HTTP" .Values.rasax.livenessProbe.scheme }}
          initialDelaySeconds: {{ .Values.rasax.livenessProbe.initialProbeDelay }}
          failureThreshold: 10
        {{- end }}
        {{- if or .Values.rasax.readinessProbe.enabled (not (hasKey .Values.rasax.readinessProbe "enabled")) }}
        readinessProbe:
          httpGet:
            path: "/"
            port: "http"
            scheme: {{ default "HTTP" .Values.rasax.readinessProbe.scheme }}
          initialDelaySeconds: {{ .Values.rasax.readinessProbe.initialProbeDelay }}
          failureThreshold: 10
        {{- end }}
        env:
        {{- if or (eq "true" (include "is_enterprise" .)) .Values.rasax.disableTelemetry }}
        - name: "RASA_TELEMETRY_ENABLED"
          value: "false"
        {{ end }}
        {{- if .Values.debugMode }}
        - name: "DEBUG_MODE"
          value: "true"
        {{- end }}
        {{- if .Values.rasax.disableTelemetry }}
        - name: "METRICS_CONSENT"
          value: "false"
        {{- end }}
        - name: "SELF_PORT"
          value: {{ .Values.rasax.port | quote }}
        - name: "LOCAL_MODE" # This variable doesn't do anything anymore in Rasa X 0.28 and later
          value: "false"
        - name: "RASA_X_HOST"
          value: {{ .Values.rasax.scheme }}://{{ include "rasa-x.host" . }}.{{ .Release.Namespace }}.svc:{{ .Values.rasax.port }}
        - name: "RASA_MODEL_DIR"
          value: "/app/models"
        - name: "RUN_EVENT_CONSUMER_AS_SEPARATE_SERVICE"
          value: {{ default "true" .Values.separateEventService | quote }}
        {{- if $.Values.rabbitmq.enabled }}
        - name: "RABBITMQ_QUEUE"
          value: {{ template "rasa-x.rabbitmq.queue" . }}
        - name: "RABBITMQ_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: {{ template "rasa-x.rabbitmq.password.secret" . }}
              key: {{ template "rasa-x.rabbitmq.password.key" . }}
        {{- end }}
        {{- if $.Values.redis.install }}
        - name: "REDIS_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: {{ template "rasa-x.redis.password.secret" $ }}
              key: {{ template "rasa-x.redis.password.key" $ }}
        {{- end }}
        - name: "PASSWORD_SALT"
          valueFrom:
            secretKeyRef:
              name: {{ template "rasa-x.secret" . }}
              key: "passwordSalt"
        - name: "RASA_X_USER_ANALYTICS"
          value: "0"
        - name: "SANIC_RESPONSE_TIMEOUT"
          value: "3600"
        - name: "JWT_SECRET"
          valueFrom:
            secretKeyRef:
              name: {{ template "rasa-x.secret" . }}
              key: "jwtSecret"
        - name: "RASA_TOKEN"
          valueFrom:
            secretKeyRef:
              name: {{ template "rasa-x.secret" . }}
              key: "rasaToken"
        - name: "RASA_X_TOKEN"
          valueFrom:
            secretKeyRef:
              name: {{ template "rasa-x.secret" . }}
              key: "rasaXToken"
        - name: "RASA_X_USERNAME"
          value: "{{ .Values.rasax.initialUser.username }}"
        - name: "RASA_X_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: {{ template "rasa-x.secret" . }}
              key: "initialPassword"
        - name: "RUN_DATABASE_MIGRATION_AS_SEPARATE_SERVICE"
          value: {{ .Values.separateDBMigrationService | quote }}
        {{- include "rasa-x.psql.envs" . | nindent 8 }}
        {{- include "rasax.extra.envs" . | nindent 8 }}
        volumeMounts:
        - mountPath: "/app/environments.yml"
          subPath: "environments.yml"
          name: "environments"
        - mountPath: "/app/endpoints.yml"
          subPath: "endpoints.yml"
          name: "rasa-configuration"
        - mountPath: "/app/credentials.yml"
          subPath: "credentials.yml"
          name: "rasa-configuration"
        - mountPath: "/app/models"
          name: "rasa-x-claim"
          subPath: "models"
        - mountPath: "/app/logs"
          name: "rasa-x-claim"
          subPath: "logs"
        - mountPath: "/app/auth"
          name: "rasa-x-claim"
          subPath: "auth"
        - mountPath: "/app/git"
          name: "rasa-x-claim"
          subPath: "git"
{{- if .Values.rasax.extraVolumeMounts }}
{{ toYaml .Values.rasax.extraVolumeMounts | indent 8 }}
{{- end }}
        {{- with .Values.rasax.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      volumes:
{{- if .Values.rasax.extraVolumes }}
{{ toYaml .Values.rasax.extraVolumes | indent 6 }}
{{- end }}
      - name: "environments"
        configMap:
          name: {{ template "rasa-x.rasa-x.configuration-files" . }}
          items:
          - key: "environments"
            path: "environments.yml"
      - name: "rasa-configuration"
        configMap:
          name: {{ template "rasa-x.rasa.configuration-files" . }}
          items:
          - key: "rasa-endpoints"
            path: "endpoints.yml"
          - key: "rasa-credentials"
            path: "credentials.yml"
      - name: "rasa-x-claim"
        persistentVolumeClaim:
          claimName: {{ template "rasa-x.rasa-x.claim" . }}
