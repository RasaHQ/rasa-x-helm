{{ if and (eq "true" (include "db-migration-service.requiredVersion" .)) .Values.separateDBMigrationService }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-db-migration-service
  labels:
    {{- include "rasa-x.labels" . | nindent 4 }}
    app.kubernetes.io/component: db-migration-service
spec:
  serviceName: "default"
  replicas: 1
  selector:
    matchLabels:
      {{- include "rasa-x.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: db-migration-service
  template:
    metadata:
      labels:
        {{- include "rasa-x.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: db-migration-service
        {{- if .Values.dbMigrationService.podLabels }}
{{ toYaml .Values.dbMigrationService.podLabels | indent 8 }}
        {{- end }}
    spec:
      automountServiceAccountToken: {{ .Values.dbMigrationService.automountServiceAccountToken }}
      {{ include "rasa-x.spec" . }}
      {{- if .Values.dbMigrationService.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.dbMigrationService.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.dbMigrationService.tolerations }}
      tolerations:
{{ toYaml .Values.dbMigrationService.tolerations | indent 6 }}
      {{- end }}
      containers:
      - name: db-migration-service
        image: "{{ include "dbMigrationService-name" . }}:{{ include "db-migration-service.version" . }}"
        imagePullPolicy: {{ .Values.images.pullPolicy }}
        {{- if .Values.dbMigrationService.command }}
        command:
          {{- toYaml .Values.dbMigrationService.command | nindent 10 }}
        {{- end }}
        args:
        {{- if .Values.dbMigrationService.args }}
          {{- toYaml .Values.dbMigrationService.args | nindent 10 }}
        {{- else }}
          - python
          - -m
          - rasax.community.services.db_migration_service
        {{- end }}
        ports:
          - name: "http"
            containerPort: {{ .Values.dbMigrationService.port }}
            protocol: "TCP"
        {{- if or .Values.dbMigrationService.livenessProbe.enabled (not (hasKey .Values.dbMigrationService.livenessProbe "enabled")) }}
        livenessProbe:
          initialDelaySeconds: {{ .Values.dbMigrationService.livenessProbe.initialProbeDelay }}
          httpGet:
            path: "/health"
            port: "http"
            scheme: {{ default "HTTP" .Values.dbMigrationService.livenessProbe.scheme }}
        {{- end }}
        {{- if or .Values.dbMigrationService.readinessProbe.enabled (not (hasKey .Values.dbMigrationService.readinessProbe "enabled")) }}
        readinessProbe:
          initialDelaySeconds: {{ .Values.dbMigrationService.readinessProbe.initialProbeDelay }}
          httpGet:
            path: "/health"
            port: "http"
            scheme: {{ default "HTTP" .Values.dbMigrationService.readinessProbe.scheme }}
        {{- end }}
{{- if .Values.dbMigrationService.extraVolumeMounts }}
        volumeMounts:
{{ toYaml .Values.dbMigrationService.extraVolumeMounts | indent 8 }}
{{- end }}
        env:
        - name: "RASA_TELEMETRY_ENABLED"
          value: "false"
        - name: "SELF_PORT"
          value: {{ .Values.dbMigrationService.port | quote }}
        - name: "RUN_DATABASE_MIGRATION_AS_SEPARATE_SERVICE"
          value: "true"
        {{- include "rasa-x.psql.envs" . | nindent 8 }}
        {{- include "rasax.db-migration-service.extra.envs" . | nindent 8 }}
        {{- with .Values.dbMigrationService.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
{{- if .Values.dbMigrationService.extraVolumes }}
      volumes:
{{ toYaml .Values.dbMigrationService.extraVolumes | indent 6 }}
{{- end }}
{{end}}
